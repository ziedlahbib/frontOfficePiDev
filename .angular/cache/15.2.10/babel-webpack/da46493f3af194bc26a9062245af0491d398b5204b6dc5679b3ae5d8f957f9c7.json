{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterOutlet } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Technologie } from '../../model/technologie';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nlet ForumComponent = class ForumComponent {\n  constructor(ps, formBuilder, route) {\n    this.ps = ps;\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.isReady = false;\n    this.listofrep = [];\n    this.listofQuestion = [];\n    this.tech = Technologie;\n    this.nbrlike = [];\n  }\n  ngOnInit() {\n    this.currentUser = \"65d621813ece05768b528f25\";\n    this.getallQuestion();\n    this.initForm();\n    this.initFormquest();\n  }\n  addquestion() {\n    this.ps.ajoutQuestion(this.questform.value, \"65d621813ece05768b528f25\").subscribe(res => {\n      this.getallQuestion();\n    });\n  }\n  initFormquest() {\n    this.questform = this.formBuilder.group({\n      contenue: ['', Validators.required],\n      tech: [[], Validators.required]\n    });\n    this.questform.valueChanges.subscribe(data => {\n      console.log(this.questform.value);\n    });\n  }\n  getallQuestion() {\n    this.ps.getQuestions().subscribe(data => {\n      console.log(data);\n      this.listofQuestion = data;\n      this.isReady = true;\n      for (let i of this.listofQuestion) {\n        let index = this.listofQuestion.indexOf(i);\n        this.ps.getnbrvote(this.listofQuestion[index].id).subscribe(res => {\n          this.nbrlike[index] = res;\n        });\n      }\n    });\n  }\n  ajouterreponse(post) {\n    console.log(this.repform.value);\n    this.ps.addreponse(post, \"65d621813ece05768b528f25\", this.repform.value).subscribe(data => {\n      this.getallQuestion();\n    });\n  }\n  getcmtbypos(post) {\n    this.ps.getreponsebyquestion(post).subscribe(data => {});\n  }\n  initForm() {\n    this.repform = this.formBuilder.group({\n      contenue: ['', Validators.required]\n    });\n    this.repform.valueChanges.subscribe(data => {\n      console.log(this.repform);\n    });\n  }\n  addlike(post) {\n    this.ps.vote(post.id, \"65d621813ece05768b528f25\", post).subscribe(data => {\n      console.log(data);\n      this.ps.getnbrvote(post.id).subscribe(res => {\n        console.log(this.nbrlike);\n        let index = this.listofQuestion.indexOf(post);\n        console.log(index);\n        this.nbrlike[index] = res;\n      });\n    });\n  }\n};\nForumComponent = __decorate([Component({\n  selector: 'app-forum',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, HttpClientModule, FormsModule, ReactiveFormsModule, MatIconModule, AutocompleteComponent],\n  templateUrl: './forum.component.html',\n  styleUrl: './forum.component.scss'\n})], ForumComponent);\nexport { ForumComponent };","map":{"version":3,"mappings":"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","names":["Component","FormsModule","ReactiveFormsModule","Validators","RouterOutlet","HttpClientModule","CommonModule","MatIconModule","Technologie","AutocompleteComponent","ForumComponent","constructor","ps","formBuilder","route","ngOnInit","currentUser","getallQuestion","initForm","initFormquest","addquestion","ajoutQuestion","questform","value","subscribe","res","group","contenue","required","tech","valueChanges","data","console","log","getQuestions","listofQuestion","isReady","i","index","indexOf","getnbrvote","id","nbrlike","ajouterreponse","post","repform","addreponse","getcmtbypos","getreponsebyquestion","addlike","vote","selector","standalone","imports","templateUrl","styleUrl"],"sourceRoot":"","sources":["C:\\Users\\lahbi\\OneDrive - ESPRIT\\Bureau\\wetransfer_courzello-backoffice_2024-02-21_2018\\Courzello-backOffice\\frontOfficePiDev\\src\\app\\pages\\forum\\forum.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Reponse } from '../../model/reponse';\r\nimport { Question } from '../../model/question';\r\nimport { QuestionServiceService } from '../../service/question-service.service';\r\nimport { Router, RouterOutlet } from '@angular/router';\r\nimport { Vote } from '../../model/vote';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { Technologie } from '../../model/technologie';\r\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\r\n\r\n@Component({\r\n  selector: 'app-forum',\r\n  standalone: true,\r\n  imports: [ CommonModule,   RouterOutlet,\r\n   HttpClientModule,\r\n   FormsModule,\r\n   ReactiveFormsModule,MatIconModule,AutocompleteComponent],\r\n  \r\n  templateUrl: './forum.component.html',\r\n  styleUrl: './forum.component.scss'\r\n})\r\nexport class ForumComponent implements OnInit {\r\n  currentUser!: String;\r\n  isReady:boolean=false;\r\n  questform!:FormGroup;\r\n  repform!: FormGroup;\r\n  listofrep: Reponse[] = [];\r\n  listofQuestion: Question[] = [];\r\n  tech=Technologie\r\n  nbrlike:Number[]=[]\r\n  constructor(private ps:QuestionServiceService,private formBuilder: FormBuilder,private route:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = \"65d621813ece05768b528f25\";\r\n    this.getallQuestion();\r\n    this.initForm();\r\n    this.initFormquest()\r\n  }\r\n  addquestion(){\r\n    this.ps.ajoutQuestion(this.questform.value,\"65d621813ece05768b528f25\").subscribe(\r\n      res=>{\r\n          this.getallQuestion()\r\n      }\r\n    )\r\n  }\r\n  initFormquest() {\r\n    this.questform = this.formBuilder.group({\r\n      contenue: ['', Validators.required],\r\n      tech:[[], Validators.required],\r\n\r\n  });\r\n\r\n  this.questform.valueChanges.subscribe(\r\n    data=>{console.log(this.questform.value)}\r\n  )\r\n}\r\n\r\n\r\n  getallQuestion(){\r\n    this.ps.getQuestions().subscribe(\r\n      data=>{\r\n        console.log(data)\r\n        this.listofQuestion=data;\r\n        this.isReady=true;\r\n        for(let i of this.listofQuestion){\r\n          let index=this.listofQuestion.indexOf(i);\r\n          this.ps.getnbrvote(this.listofQuestion[index].id).subscribe(\r\n            res=>{\r\n              \r\n              this.nbrlike[index]=res;\r\n            }\r\n          )\r\n        }\r\n      }\r\n    )\r\n  }\r\n  ajouterreponse(post:String){\r\n    console.log(this.repform.value);\r\n    this.ps.addreponse(post,\"65d621813ece05768b528f25\",this.repform.value).subscribe(\r\n    data=>{\r\n      this.getallQuestion();\r\n        }\r\n     \r\n    );\r\n  \r\n  }\r\n  getcmtbypos(post:any){\r\n    this.ps.getreponsebyquestion(post).subscribe(\r\n      data=>{\r\n  \r\n      }\r\n    )\r\n  }\r\n  initForm() {\r\n    this.repform = this.formBuilder.group({\r\n      contenue: ['', Validators.required],\r\n\r\n  });\r\n\r\n  this.repform.valueChanges.subscribe(\r\n    data=>{console.log(this.repform)}\r\n  )\r\n}\r\naddlike(post:Question){\r\n  this.ps.vote(post.id,\"65d621813ece05768b528f25\",post).subscribe(\r\n    data=>{\r\n        console.log(data)\r\n        this.ps.getnbrvote(post.id).subscribe(\r\n          res=>{\r\n            console.log(this.nbrlike)\r\n            let index=this.listofQuestion.indexOf(post);\r\n            console.log(index)\r\n            this.nbrlike[index]=res;\r\n          }\r\n        )\r\n      }\r\n  )\r\n}\r\n// onTechnologySelected(technology: Technologie) {\r\n//   // Handle the selected technology here\r\n//   this.questform.patchValue({\r\n//     tech: technology\r\n//   });\r\n// }\r\n// onTechnologySelected(select: HTMLSelectElement) {\r\n//   const selectedOptions = Array.from(select.selectedOptions).map(option => option.value);\r\n//   this.questform.get('tech')?.setValue(selectedOptions);\r\n// }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}