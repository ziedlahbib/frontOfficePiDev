{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Technologie } from '../../model/technologie';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/question-service.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nfunction ForumComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r2.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r2.value);\n  }\n}\nfunction ForumComponent_div_20_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const h_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"#\", h_r8.technologie, \"\");\n  }\n}\nfunction ForumComponent_div_20_div_12_div_6_form_1_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_12_div_6_form_1_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const i_r10 = i0.ɵɵnextContext(3).index;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.toggleContent2(i_r10));\n    });\n    i0.ɵɵtext(1, \"retour\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForumComponent_div_20_div_12_div_6_form_1_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_12_div_6_form_1_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      const cmt_r9 = ctx_r23.$implicit;\n      const i_r10 = ctx_r23.index;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      ctx_r22.modifierre(cmt_r9);\n      return i0.ɵɵresetView(ctx_r22.toggleContent2(i_r10));\n    });\n    i0.ɵɵtext(1, \"save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForumComponent_div_20_div_12_div_6_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵelement(1, \"textarea\", 24);\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵtemplate(3, ForumComponent_div_20_div_12_div_6_form_1_button_3_Template, 2, 0, \"button\", 21);\n    i0.ɵɵtemplate(4, ForumComponent_div_20_div_12_div_6_form_1_button_4_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const formGroup_r15 = ctx.$implicit;\n    const cmt_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", formGroup_r15);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.currentUser == cmt_r9.user.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.currentUser == cmt_r9.user.id);\n  }\n}\nfunction ForumComponent_div_20_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ForumComponent_div_20_div_12_div_6_form_1_Template, 5, 3, \"form\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.formGroups);\n  }\n}\nfunction ForumComponent_div_20_div_12_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_12_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const i_r10 = i0.ɵɵnextContext().index;\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.toggleContent2(i_r10));\n    });\n    i0.ɵɵtext(1, \"modifier\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForumComponent_div_20_div_12_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_12_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const cmt_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.delete(cmt_r9));\n    });\n    i0.ɵɵtext(1, \"effacer\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForumComponent_div_20_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 2)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ForumComponent_div_20_div_12_div_6_Template, 2, 1, \"div\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ForumComponent_div_20_div_12_button_7_Template, 2, 0, \"button\", 21);\n    i0.ɵɵtemplate(8, ForumComponent_div_20_div_12_button_8_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cmt_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(cmt_r9.contenue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Comment by: \", cmt_r9.user == null ? null : cmt_r9.user.nom, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.showParagraphs[i_r10]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.currentUser == cmt_r9.user.id && !ctx_r6.showParagraphs[i_r10]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.currentUser == cmt_r9.user.id);\n  }\n}\nfunction ForumComponent_div_20_div_13_div_6_form_1_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_13_div_6_form_1_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const i_r33 = i0.ɵɵnextContext(3).index;\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r40.toggleContent2(i_r33));\n    });\n    i0.ɵɵtext(1, \"retour\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForumComponent_div_20_div_13_div_6_form_1_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_13_div_6_form_1_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext(3);\n      const comment_r32 = ctx_r44.$implicit;\n      const i_r33 = ctx_r44.index;\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      ctx_r43.modifierre(comment_r32);\n      return i0.ɵɵresetView(ctx_r43.toggleContent2(i_r33));\n    });\n    i0.ɵɵtext(1, \"save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForumComponent_div_20_div_13_div_6_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵelement(1, \"textarea\", 24);\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵtemplate(3, ForumComponent_div_20_div_13_div_6_form_1_button_3_Template, 2, 0, \"button\", 21);\n    i0.ɵɵtemplate(4, ForumComponent_div_20_div_13_div_6_form_1_button_4_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const formGroup_r36 = ctx.$implicit;\n    const ctx_r35 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"formGroup\", formGroup_r36);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r35.currentUser == ctx_r35.cmt.user.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r35.currentUser == ctx_r35.cmt.user.id);\n  }\n}\nfunction ForumComponent_div_20_div_13_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ForumComponent_div_20_div_13_div_6_form_1_Template, 5, 3, \"form\", 23);\n    i0.ɵɵelement(2, \"button\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r34.formGroups);\n  }\n}\nfunction ForumComponent_div_20_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 2)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ForumComponent_div_20_div_13_div_6_Template, 3, 1, \"div\", 20);\n    i0.ɵɵelementStart(7, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_div_13_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const i_r33 = restoredCtx.index;\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r46.toggleContent2(i_r33));\n    });\n    i0.ɵɵtext(8, \"Toggle Form\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const comment_r32 = ctx.$implicit;\n    const i_r33 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r32.contenue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Comment by: \", comment_r32.user == null ? null : comment_r32.user.nom, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.showParagraphs[i_r33]);\n  }\n}\nfunction ForumComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h1\");\n    i0.ɵɵtext(2, \"Question:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ForumComponent_div_20_div_5_Template, 3, 1, \"div\", 14);\n    i0.ɵɵelementStart(6, \"p\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 16);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_Template_span_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.addlike(item_r3));\n    });\n    i0.ɵɵtext(9, \" shift_lock \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"a\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, ForumComponent_div_20_div_12_Template, 9, 5, \"div\", 17);\n    i0.ɵɵtemplate(13, ForumComponent_div_20_div_13_Template, 9, 3, \"div\", 17);\n    i0.ɵɵelementStart(14, \"form\", 4)(15, \"div\", 5)(16, \"label\", 6);\n    i0.ɵɵtext(17, \"Comment:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"textarea\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 10)(20, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ForumComponent_div_20_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.ajouterreponse(item_r3.id));\n    });\n    i0.ɵɵtext(21, \"repondre\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const idx_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r3.contenue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r3.hashtag);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Posted by:\", item_r3 == null ? null : item_r3.user == null ? null : item_r3.user.nom, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.nbrlike[idx_r4]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r3 == null ? null : item_r3.reponses);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r3.reponses);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.repform);\n  }\n}\nexport class ForumComponent {\n  constructor(ps, formBuilder, route) {\n    this.ps = ps;\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.isReady = false;\n    this.showParagraph = true;\n    this.hide = true;\n    this.listofrep = [];\n    this.repo = [];\n    this.listofQuestion = [];\n    this.tech = Technologie;\n    this.nbrlike = [];\n    this.formGroups = [];\n    this.questionsWithResponses = [];\n    this.showResponse = [];\n    this.showParagraphs = []; // Array to store the visibility state for each comment\n  }\n\n  ngOnInit() {\n    this.currentUser = \"65d621813ece05768b528f25\";\n    this.initForm();\n    this.getallQuestion();\n    this.initFormquest();\n    this.formGroup = this.formBuilder.group({\n      contenue: ['', Validators.required]\n    });\n  }\n  addquestion() {\n    this.ps.ajoutQuestion(this.questform.value, this.currentUser).subscribe(res => {\n      console.log(res);\n      this.getallQuestion();\n    });\n  }\n  initFormquest() {\n    this.questform = this.formBuilder.group({\n      contenue: ['', Validators.required],\n      tech: [[], Validators.required]\n    });\n    this.questform.valueChanges.subscribe(data => {\n      console.log(this.questform.value);\n    });\n  }\n  getallQuestion() {\n    this.ps.getQuestions().subscribe(data => {\n      console.log(data);\n      this.listofQuestion = data;\n      this.isReady = true;\n      for (let question of data) {\n        if (question.reponses != null) {\n          for (let reponse of question.reponses) {\n            if (reponse != null) {\n              console.log(reponse);\n              const formGroup = this.initFormmodif(reponse);\n              this.formGroups.push(formGroup);\n              this.formGroups = question.reponses.map(reponse => this.initFormmodif(reponse));\n              this.initializeVisibilityState(reponse);\n            }\n          }\n        }\n        let index = this.listofQuestion.indexOf(question);\n        this.ps.getnbrvote(question.id).subscribe(res => {\n          this.nbrlike[index] = res;\n        });\n      }\n    });\n  }\n  ajouterreponse(post) {\n    console.log(this.repform.value);\n    this.ps.addreponse(post, this.currentUser, this.repform.value).subscribe(data => {\n      this.getallQuestion();\n    });\n  }\n  getcmtbypos(post) {\n    this.ps.getreponsebyquestion(post).subscribe(data => {});\n  }\n  addlike(post) {\n    this.ps.vote(post.id, this.currentUser, post).subscribe(data => {\n      console.log(data);\n      this.ps.getnbrvote(post.id).subscribe(res => {\n        console.log(this.nbrlike);\n        let index = this.listofQuestion.indexOf(post);\n        console.log(index);\n        this.nbrlike[index] = res;\n      });\n    });\n  }\n  // onTechnologySelected(technology: Technologie) {\n  //   // Handle the selected technology here\n  //   this.questform.patchValue({\n  //     tech: technology\n  //   });\n  // }\n  // onTechnologySelected(select: HTMLSelectElement) {\n  //   const selectedOptions = Array.from(select.selectedOptions).map(option => option.value);\n  //   this.questform.get('tech')?.setValue(selectedOptions);\n  // }\n  delete(cmt) {\n    this.ps.deletereponse(cmt.id).subscribe(res => {\n      this.getallQuestion();\n    });\n  }\n  modifierre(rep) {\n    this.ps.updateReponse(rep.id, this.formGroup.value).subscribe(data => {\n      this.getallQuestion();\n    });\n  }\n  initForm() {\n    this.repform = this.formBuilder.group({\n      contenue: ['', Validators.required]\n    });\n  }\n  initFormmodif(response) {\n    return this.formBuilder.group({\n      contenue: [response?.contenue, Validators.required]\n    });\n  }\n  // Initialize the visibility state for each comment\n  initializeVisibilityState(reponses) {\n    // Get an array of response IDs\n    const responseIds = Object.keys(reponses);\n    // Initialize the visibility state for each response\n    this.showParagraphs = responseIds.map(() => false);\n    console.log(this.showParagraphs);\n  }\n  // Function to toggle the visibility state of a comment's form\n  toggleContent2(commentIndex) {\n    this.showParagraphs[commentIndex] = !this.showParagraphs[commentIndex];\n  }\n  toggleContent() {\n    this.showParagraph = !this.showParagraph;\n  }\n  static #_ = this.ɵfac = function ForumComponent_Factory(t) {\n    return new (t || ForumComponent)(i0.ɵɵdirectiveInject(i1.QuestionServiceService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForumComponent,\n    selectors: [[\"app-forum\"]],\n    decls: 21,\n    vars: 5,\n    consts: [[\"rel\", \"stylesheet\", \"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"], [\"rel\", \"stylesheet\", \"href\", \"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\"], [1, \"container\"], [1, \"post\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"comment\"], [\"rows\", \"5\", \"id\", \"comment\", \"formControlName\", \"contenue\", 1, \"form-control\"], [\"multiple\", \"\", \"formControlName\", \"tech\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\", \"text-right\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [\"class\", \"post\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [4, \"ngFor\", \"ngForOf\"], [1, \"author\"], [1, \"material-symbols-outlined\", \"clickable\", 3, \"click\"], [\"class\", \"comment\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 2, \"color\", \"blue\", \"font-weight\", \"bold\"], [1, \"comment\"], [4, \"ngIf\"], [\"style\", \"margin: 15px;\", \"class\", \"btn btn-primary btn-sm\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-primary btn-sm\", 3, \"click\", 4, \"ngIf\"], [3, \"formGroup\", 4, \"ngFor\", \"ngForOf\"], [\"rows\", \"5\", \"cols\", \"50\", \"formControlName\", \"contenue\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 2, \"margin\", \"15px\", 3, \"click\"], [3, \"click\"]],\n    template: function ForumComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"link\", 0)(1, \"link\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4)(5, \"div\")(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Question:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"textarea\", 7);\n        i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Toppings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-select\", 8);\n        i0.ɵɵtemplate(14, ForumComponent_mat_option_14_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵpipe(15, \"keyvalue\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ForumComponent_Template_button_click_17_listener() {\n          return ctx.addquestion();\n        });\n        i0.ɵɵtext(18, \"Poser Questopn\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵtemplate(20, ForumComponent_div_20_Template, 22, 7, \"div\", 12);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.questform);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 3, ctx.tech));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listofQuestion);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.MatOption, i4.KeyValuePipe],\n    styles: [\"body[_ngcontent-%COMP%] {\\r\\n    font-family: Arial, sans-serif;\\r\\n    background-color: #f0f0f0;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n  }\\r\\n  \\r\\n  .container[_ngcontent-%COMP%] {\\r\\n    max-width: 800px;\\r\\n    margin: 20px auto;\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  .post[_ngcontent-%COMP%] {\\r\\n    border-bottom: 1px solid #ddd;\\r\\n    padding-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .post[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  .author[_ngcontent-%COMP%] {\\r\\n    font-style: italic;\\r\\n  }\\r\\n  \\r\\n  .comments[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n  }\\r\\n  \\r\\n  .comment[_ngcontent-%COMP%] {\\r\\n    background-color: #f9f9f9;\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 4px;\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  .comment[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .comment[_ngcontent-%COMP%]   .author[_ngcontent-%COMP%] {\\r\\n    font-style: italic;\\r\\n    color: #888;\\r\\n  }\\r\\n  .clickable[_ngcontent-%COMP%] {\\r\\n    cursor: pointer;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZm9ydW0vZm9ydW0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtJQUM5Qix5QkFBeUI7SUFDekIsU0FBUztJQUNULFVBQVU7RUFDWjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsd0NBQXdDO0VBQzFDOztFQUVBO0lBQ0UsNkJBQTZCO0lBQzdCLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztFQUNiO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbiAgXHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG4gIFxyXG4gIC5wb3N0IHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5wb3N0IHAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmF1dGhvciB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb21tZW50cyB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuY29tbWVudCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuY29tbWVudCBwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9XHJcbiAgXHJcbiAgLmNvbW1lbnQgLmF1dGhvciB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICB9XHJcbiAgLmNsaWNrYWJsZSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\", \".material-symbols-outlined[_ngcontent-%COMP%] {\\n    font-variation-settings:\\n    'FILL' 0,\\n    'wght' 400,\\n    'GRAD' 0,\\n    'opsz' 24;\\n    color: #ADD8E6;\\n  }\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","Technologie","i0","ctx_r22","ctx_r43","ForumComponent","constructor","ps","formBuilder","route","ngOnInit","currentUser","initForm","getallQuestion","initFormquest","formGroup","group","contenue","required","addquestion","ajoutQuestion","questform","value","subscribe","res","console","log","tech","valueChanges","data","getQuestions","listofQuestion","isReady","question","reponses","reponse","initFormmodif","formGroups","push","map","initializeVisibilityState","index","indexOf","getnbrvote","id","nbrlike","ajouterreponse","post","repform","addreponse","getcmtbypos","getreponsebyquestion","addlike","vote","delete","cmt","deletereponse","modifierre","rep","updateReponse","response","responseIds","Object","keys","showParagraphs","toggleContent2","commentIndex","toggleContent","showParagraph","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\lahbi\\OneDrive - ESPRIT\\Bureau\\wetransfer_courzello-backoffice_2024-02-21_2018\\Courzello-backOffice\\frontOfficePiDev\\src\\app\\pages\\forum\\forum.component.ts","C:\\Users\\lahbi\\OneDrive - ESPRIT\\Bureau\\wetransfer_courzello-backoffice_2024-02-21_2018\\Courzello-backOffice\\frontOfficePiDev\\src\\app\\pages\\forum\\forum.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Reponse } from '../../model/reponse';\nimport { Question } from '../../model/question';\nimport { QuestionServiceService } from '../../service/question-service.service';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Vote } from '../../model/vote';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Technologie } from '../../model/technologie';\n\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.css']\n})\nexport class ForumComponent {\n  currentUser!: String;\n  isReady: boolean = false;\n  questform!: FormGroup;\n  formGroup!: FormGroup;\n  showParagraph: boolean = true;\n  hide: boolean = true;\n  repform!: FormGroup;\n  listofrep: Reponse[] = [];\n  repo: Reponse[] = [];\n  listofQuestion: Question[] = [];\n  tech = Technologie\n  nbrlike: Number[] = []\n  constructor(private ps: QuestionServiceService, private formBuilder: FormBuilder, private route: Router) { }\n\n  ngOnInit(): void {\n    this.currentUser = \"65d621813ece05768b528f25\";\n    this.initForm();\n    this.getallQuestion();\n    this.initFormquest();\n    this.formGroup = this.formBuilder.group({\n      contenue: ['', Validators.required]\n    });\n  }\n  addquestion() {\n    this.ps.ajoutQuestion(this.questform.value, this.currentUser).subscribe(\n      res => {\n        console.log(res)\n        this.getallQuestion()\n      }\n    )\n  }\n  initFormquest() {\n    this.questform = this.formBuilder.group({\n      contenue: ['', Validators.required],\n      tech: [[], Validators.required],\n\n    });\n\n    this.questform.valueChanges.subscribe(\n      data => { console.log(this.questform.value) }\n    )\n  }\n\n  formGroups: FormGroup[] = [];\n  getallQuestion() {\n    this.ps.getQuestions().subscribe(data => {\n      console.log(data);\n      this.listofQuestion = data;\n      this.isReady = true;\n  \n      for (let question of data) {\n        if (question.reponses != null) {\n          for (let reponse of question.reponses) {\n            if (reponse != null) {\n              console.log(reponse);\n              const formGroup = this.initFormmodif(reponse);\n              this.formGroups.push(formGroup);\n              this.formGroups = question.reponses.map(reponse => this.initFormmodif(reponse));\n              this.initializeVisibilityState(reponse);\n            }\n          }\n        }\n  \n        let index = this.listofQuestion.indexOf(question);\n        this.ps.getnbrvote(question.id).subscribe(res => {\n          this.nbrlike[index] = res;\n        });\n      }\n    });\n  }\n  ajouterreponse(post: String) {\n    console.log(this.repform.value);\n    this.ps.addreponse(post, this.currentUser, this.repform.value).subscribe(\n      data => {\n        this.getallQuestion();\n      }\n\n    );\n\n  }\n  getcmtbypos(post: any) {\n    this.ps.getreponsebyquestion(post).subscribe(\n      data => {\n\n      }\n    )\n  }\n\n  \n  addlike(post: Question) {\n    this.ps.vote(post.id, this.currentUser, post).subscribe(\n      data => {\n        console.log(data)\n        this.ps.getnbrvote(post.id).subscribe(\n          res => {\n            console.log(this.nbrlike)\n            let index = this.listofQuestion.indexOf(post);\n            console.log(index)\n            this.nbrlike[index] = res;\n          }\n        )\n      }\n    )\n  }\n  // onTechnologySelected(technology: Technologie) {\n  //   // Handle the selected technology here\n  //   this.questform.patchValue({\n  //     tech: technology\n  //   });\n  // }\n  // onTechnologySelected(select: HTMLSelectElement) {\n  //   const selectedOptions = Array.from(select.selectedOptions).map(option => option.value);\n  //   this.questform.get('tech')?.setValue(selectedOptions);\n  // }\n  delete(cmt: Reponse) {\n    this.ps.deletereponse(cmt.id).subscribe(\n      res => {\n        this.getallQuestion();\n      }\n    )\n  }\n\n  modifierre(rep: Reponse) {\n    this.ps.updateReponse(rep.id, this.formGroup.value).subscribe(\n      data => {\n        this.getallQuestion();\n      }\n    )\n  }\n  initForm() {\n    this.repform = this.formBuilder.group({\n      contenue: ['', Validators.required]\n    });\n  }\n\n  initFormmodif(response: Reponse): FormGroup {\n    return this.formBuilder.group({\n      contenue: [response?.contenue, Validators.required]\n    });\n  }\n  \n  questionsWithResponses: any[] = [];\n  showResponse: boolean[][] = []; \n  showParagraphs: boolean[] = []; // Array to store the visibility state for each comment\n\n  // Initialize the visibility state for each comment\n  initializeVisibilityState(reponses: any) {\n    // Get an array of response IDs\n    const responseIds = Object.keys(reponses);\n    // Initialize the visibility state for each response\n    this.showParagraphs = responseIds.map(() => false);\n    console.log(this.showParagraphs)\n  }\n  \n  \n  // Function to toggle the visibility state of a comment's form\n  toggleContent2(commentIndex: number) {\n    this.showParagraphs[commentIndex] = !this.showParagraphs[commentIndex];\n  }\n  toggleContent() {\n    this.showParagraph = !this.showParagraph;\n}\n}\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\n<style>\n  .material-symbols-outlined {\n    font-variation-settings:\n    'FILL' 0,\n    'wght' 400,\n    'GRAD' 0,\n    'opsz' 24;\n    color: #ADD8E6;\n  }\n  </style>\n  <div class=\"container\">\n    <div class=\"post\">\n      <form [formGroup]=\"questform\">\n        <div>\n          <div class=\"form-group\"  >\n            <label for=\"comment\">Question:</label>\n            <textarea class=\"form-control\" rows=\"5\" id=\"comment\" formControlName=\"contenue\" ></textarea>\n            <mat-form-field>\n              <mat-label>Toppings</mat-label>\n              <mat-select multiple formControlName=\"tech\">\n                  <mat-option *ngFor=\"let c of tech | keyvalue\" [value]=\"c.key\">{{ c.value }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <!-- <app-autocomplete ngSkipHydration (technologySelected)=\"onTechnologySelected($event)\"></app-autocomplete> -->\n          </div>\n          <div class=\"col-6 text-right\"> \n            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"addquestion()\" >Poser Questopn</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n        \n<div class=\"container\">\n  \n  <div *ngFor=\"let item of listofQuestion;let idx = index\"  class=\"post\">\n    <h1>Question:</h1>\n    <p>{{item.contenue}}</p>\n\n    <div *ngFor=\"let h of item.hashtag\">\n      <a style=\"color: blue;font-weight: bold;\" href=\"#\">#{{h.technologie}}</a>\n    </div>\n\n      <p class=\"author\">Posted by:{{ item?.user?.nom}}</p>\n\n    <span class=\"material-symbols-outlined clickable\" (click)=\"addlike(item)\">\n      shift_lock\n      </span>\n      <a>{{nbrlike[idx]}}</a>\n    <!-- <div class=\"comments\" *ngFor=\"let cmt of item.reponses ;\">\n      <div class=\"comment\">\n        <div class=\"container\">\n          <p >{{cmt.contenue}}</p>\n          <p class=\"author\">Comment by: {{cmt?.user?.nom}}</p>\n          <div *ngFor=\"let formGroup of formGroups; let i = index\">\n            <div  *ngIf=\"!showParagraph\">\n              <form [formGroup]=\"formGroup\">\n                <textarea rows=\"5\" cols=\"50\" formControlName=\"contenue\">{{ formGroup?.get('contenue')?.value }}</textarea>\n                <div class=\"col-6 text-right\">\n                  <button *ngIf=\"currentUser == cmt.user.id\" style=\"margin: 15px;\" class=\"btn btn-primary btn-sm\" (click)=\"toggleContent()\">retour</button>\n                  <button *ngIf=\"currentUser == cmt.user.id\" type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"modifierre(cmt); toggleContent()\">save</button>\n                </div>\n              </form>\n            </div>\n          </div>         \n        </div>\n        <button *ngIf=\"currentUser==cmt.user.id&&showParagraph\" style=\"margin: 15px;\" class=\"btn btn-primary btn-sm\" (click)=\"toggleContent()\">modifier</button>       \n        <button *ngIf=\"currentUser==cmt.user.id\"type=\"button\"  class=\"btn btn-primary btn-sm\"(click)=\"delete(cmt)\" >effacer</button>\n      </div>\n    </div> -->\n      <!-- Additional comments can be added here -->\n      <div class=\"comment\" *ngFor=\"let cmt of item?.reponses; let i = index\">\n        <div class=\"container\">\n          <p>{{ cmt.contenue }}</p>\n          <p class=\"author\">Comment by: {{ cmt.user?.nom }}</p>\n          <div *ngIf=\"showParagraphs[i]\">\n            <form [formGroup]=\"formGroup\" *ngFor=\"let formGroup of formGroups; let j = index\">\n              <textarea rows=\"5\" cols=\"50\" formControlName=\"contenue\"></textarea>\n              <div class=\"col-6 text-right\">\n                <button *ngIf=\"currentUser == cmt.user.id\" style=\"margin: 15px;\" class=\"btn btn-primary btn-sm\" (click)=\"toggleContent2(i)\">retour</button>\n                <button *ngIf=\"currentUser == cmt.user.id\" type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"modifierre(cmt); toggleContent2(i)\">save</button>\n\n              </div>\n            </form>\n            \n          </div>\n        </div>\n        <button *ngIf=\"currentUser==cmt.user.id&&!showParagraphs[i]\" style=\"margin: 15px;\" class=\"btn btn-primary btn-sm\" (click)=\"toggleContent2(i)\">modifier</button>       \n        <button *ngIf=\"currentUser==cmt.user.id\"type=\"button\"  class=\"btn btn-primary btn-sm\"(click)=\"delete(cmt)\" >effacer</button>\n      </div>\n      <!-- hhqh -->\n      <div class=\"comment\" *ngFor=\"let comment of item.reponses; let i = index\">\n        <div class=\"container\">\n          <p>{{ comment.contenue }}</p>\n          <p class=\"author\">Comment by: {{ comment.user?.nom }}</p>\n          <div *ngIf=\"!showParagraphs[i]\">\n            <!-- Form content here -->\n            <form [formGroup]=\"formGroup\" *ngFor=\"let formGroup of formGroups; let j = index\">\n              <textarea rows=\"5\" cols=\"50\" formControlName=\"contenue\"></textarea>\n              <div class=\"col-6 text-right\">\n                <button *ngIf=\"currentUser == cmt.user.id\" style=\"margin: 15px;\" class=\"btn btn-primary btn-sm\" (click)=\"toggleContent2(i)\">retour</button>\n                <button *ngIf=\"currentUser == cmt.user.id\" type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"modifierre(comment); toggleContent2(i)\">save</button>\n\n              </div>\n            </form>\n            <button></button>\n          </div>\n          <button (click)=\"toggleContent2(i)\">Toggle Form</button>\n        </div>\n      </div>\n      \n<!--  -->\n      <form [formGroup]=\"repform\">\n        <div class=\"form-group\"  >\n          <label for=\"comment\">Comment:</label>\n          <textarea class=\"form-control\" rows=\"5\" id=\"comment\" formControlName=\"contenue\"></textarea>\n        </div>\n        <div class=\"col-6 text-right\"> <!-- This column takes up half of the container's width and aligns its content to the left -->\n          <button type=\"button\" class=\"btn btn-primary btn-sm\"(click)=\"ajouterreponse(item.id)\" >repondre</button>\n        </div>\n      </form>\n  </div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}